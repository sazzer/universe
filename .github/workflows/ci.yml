name: CI

on:
  push:

jobs:
  test-service:
    runs-on: ubuntu-latest
    env:
      GO111MODULE: on

    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Setup Go
        uses: actions/setup-go@v2
        with:
          go-version: "^1.15.6"

      - name: Lint
        uses: golangci/golangci-lint-action@v2
        with:
          version: v1.34.1
          working-directory: service

      - name: Setup
        working-directory: service
        run: |
          go get ./...
          go get -u github.com/gobuffalo/packr/v2/packr2
          go generate ./...

      - name: Unit Tests
        working-directory: service
        run: go test -v ./internal/...

      - name: Integration Tests
        working-directory: service
        run: go test -v ./integration/...

  build-service-container:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v1

      - name: Get the git tag
        run: |
          echo GIT_TAG=$(echo ${GITHUB_REF} | sed -e "s/refs\/.*\///g") >> $GITHUB_ENV
      - uses: whoan/docker-build-with-cache-action@v5
        with:
          registry: docker.pkg.github.com
          username: "publisher"
          password: "${{ secrets.GITHUB_TOKEN }}"
          image_name: "${{ format('{0}/universe-service', github.repository) }}"
          image_tag: "${{ env.GIT_TAG }}"
          push_git_tag: true
          context: service

  e2e:
    runs-on: ubuntu-latest
    needs:
      - test-service
      - build-service-container
    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Get the git tag
        run: |
          echo GIT_TAG=$(echo ${GITHUB_REF} | sed -e "s/refs\/.*\///g") >> $GITHUB_ENV
      - name: Docker login
        env:
          GITHUB_TOKEN: ${{secrets.GITHUB_TOKEN}}
        run: docker login docker.pkg.github.com -u $GITHUB_ACTOR -p $GITHUB_TOKEN

      - name: Pull Service Container
        run: |
          docker pull docker.pkg.github.com/${{ format('{0}/universe-service', github.repository) }}:${{ env.GIT_TAG }}
          docker tag docker.pkg.github.com/${{ format('{0}/universe-service', github.repository) }}:${{ env.GIT_TAG }} universe-service:latest
      - name: Start Services
        working-directory: e2e
        run: docker-compose up -d

      - name: Wait for service
        working-directory: /tmp
        run: |
          wget https://github.com/jwilder/dockerize/releases/download/v0.6.1/dockerize-linux-amd64-v0.6.1.tar.gz
          tar -xzvf dockerize-linux-amd64-v0.6.1.tar.gz
          /tmp/dockerize -timeout 30s -wait http://localhost:8000/health echo Started
      - name: Service Logs
        if: always()
        working-directory: e2e
        run: docker-compose logs universe-e2e-service

  deploy-service-container:
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main' && github.event_name == 'push'
    needs:
      - e2e
    steps:
      - name: Get the git tag
        run: |
          echo GIT_TAG=$(echo ${GITHUB_REF} | sed -e "s/refs\/.*\///g") >> $GITHUB_ENV
      - name: Login to Heroku Container registry
        env:
          HEROKU_API_KEY: ${{ secrets.HEROKU_API_KEY }}
        run: heroku container:login

      - name: Docker login
        env:
          GITHUB_TOKEN: ${{secrets.GITHUB_TOKEN}}
        run: docker login docker.pkg.github.com -u $GITHUB_ACTOR -p $GITHUB_TOKEN

      - name: Push container
        env:
          HEROKU_API_KEY: ${{ secrets.HEROKU_API_KEY }}
        run: |
          docker pull docker.pkg.github.com/${{ format('{0}/universe-service', github.repository) }}:${{ env.GIT_TAG }}
          docker tag docker.pkg.github.com/${{ format('{0}/universe-service', github.repository) }}:${{ env.GIT_TAG }} registry.heroku.com/universe-cd/web
          docker push registry.heroku.com/universe-cd/web
      - name: Release
        env:
          HEROKU_API_KEY: ${{ secrets.HEROKU_API_KEY }}
        run: heroku container:release -a universe-cd web
